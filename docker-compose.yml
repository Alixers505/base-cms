version: '3.7'

x-env-defaults: &env
  YARN_CACHE_FOLDER: /.yarn-cache
  NODE_ENV: development

x-env-mongo: &env-mongo
  MONGO_DSN: ${MONGO_DSN-mongodb://mongodb:27017}
  TENANT_KEY: ${TENANT_KEY-as3_baseplatform}
  ENABLE_BASEDB_LOGGING: ${ENABLE_BASEDB_LOGGING-0}

x-env-elastic: &env-elastic
  ELASTICSEARCH_URL: ${ELASTICSEARCH_URL-http://elasticsearch:9200}

x-node-defaults: &node
  tty: true
  init: true
  image: node:10.15
  entrypoint: ["node"]
  working_dir: /base-cms
  volumes:
    - .:/base-cms:cached
    - ./node_modules:/base-cms/node_modules:delegated
    - yarn-cache:/.yarn-cache
  environment:
    <<: *env

services:
  commands:
    <<: *node
    working_dir: /base-cms
    entrypoint: ["tail"]
    command: ["-f", "/dev/null"]

  mongodb:
    tty: true
    image: mongo:3.4
    volumes:
      - mongodb:/data/db
    ports:
      - "10000:27017"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.2
    environment:
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.4.2
    environment:
      server.name: kibana
      ELASTICSEARCH_URL: "${ELASTICSEARCH_URL-http://elasticsearch:9200}"
      LOGGING_QUIET: "true"
    depends_on:
      - elasticsearch
    ports:
      - "10001:5601"

  keyword-analysis:
    << : *node
    working_dir: /base-cms/services/keyword-analysis
    command: ["src"]
    environment:
      <<: *env
      <<: *env-mongo
      <<: *env-elastic
    depends_on:
      - mongodb
      - elasticsearch
      - kibana

  graphql-server:
    << : *node
    working_dir: /base-cms/services/graphql-server
    entrypoint: ["/base-cms/node_modules/.bin/gulp"]
    environment:
      <<: *env
      <<: *env-mongo
      SITEMAP_SERVICE_URI: http://sitemaps
    depends_on:
      - mongodb
    ports:
      - "10002:80"

  marko-example-website:
    << : *node
    working_dir: /base-cms/services/marko-example-website
    command: ["/base-cms/node_modules/.bin/basecms-website", "dev", "index.js"]
    environment:
      <<: *env
      <<: *env-mongo
      PORT: 80
      EXPOSED_PORT: 10007
      LIVERELOAD_PORT: 10008
      GRAPHQL_URI: ${GRAPHQL_URI-http://graphql-server}
      SITEMAPS_URI: ${SITEMAPS_URI-http://sitemaps}
    depends_on:
      - graphql-server
    ports:
      - "10007:80"
      - "10008:10008" # livereload port

  haproxy:
    image: haproxy:alpine
    ports: [ "${PORT-10010}:80" ]
    volumes:
      - ./services/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - marko-example-website
      - graphql-server

  manage:
    <<: *node
    image: danlynn/ember-cli:3.7.1
    working_dir: /base-cms/services/manage
    entrypoint: ["node_modules/.bin/ember"]
    command: ["serve", "--port", "10004", "--proxy", "http://graphql-server"]
    environment:
      <<: *env
      <<: *env-mongo
    depends_on:
      - graphql-server
    ports:
      - "10004:10004" # serve port
      - "10005:10005" # test port (needs to be configured)

  sitemaps:
    << : *node
    working_dir: /base-cms/services/sitemaps
    command: ["/base-cms/node_modules/.bin/gulp"]
    environment:
      <<: *env
      <<: *env-mongo
    depends_on:
      - mongodb
    ports:
      - "10009:80"

volumes:
  esdata: {}
  mongodb: {}
  yarn-cache: {}

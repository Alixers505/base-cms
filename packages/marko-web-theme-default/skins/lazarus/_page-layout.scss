@mixin create-row() {
  display: flex;
  margin-right: -$grid-gutter-width / 2;
  margin-left: -$grid-gutter-width / 2;
}

.lazarus {
  @include create-row();

  &__left {
    @include make-col-ready();
    position: sticky;
    @each $breakpoint, $width in sort-map-by-values($theme-site-header-breakpoints, desc) {
      @media (max-width: $width) {
        top: calc(#{calculate-navbar-height-for($breakpoint)} + #{$grid-gutter-width / 2});
        height: calc(100vh - #{calculate-navbar-height-for($breakpoint)} - #{$grid-gutter-width / 2});
      }
    }

    flex: 0 0 320px;
    max-width: 320px;
    overflow: scroll;
    opacity: 1;
    transition-duration: 375ms;
    transition-property: width, max-width, padding, opacity;
    will-change: width, max-width, padding, opacity;
    @media (max-width: 1068px) {
      flex-basis: 0;
      width: 0;
      max-width: 0;
      padding: 0;
      opacity: 0;
    }

    > * {
      margin-bottom: map-get($spacers, block);
      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  &__right {
    @include make-col-ready();
  }

  &__right-top {
    @include create-row();
    @include media-breakpoint-down(sm) {
      flex-wrap: wrap;
    }
  }

  &__right-top-left {
    @include make-col-ready();
  }

  &__right-top-right {
    @include make-col-ready();
    flex: 0 0 320px;
    max-width: 320px;
    margin-top: 41px;

    transition-duration: 375ms;
    transition-property: max-width, margin;
    will-change: max-width, margin;
    @include media-breakpoint-down(sm) {
      flex: 0 0 100%;
      max-width: 100%;
      margin-top: 0;
    }

    > * {
      margin-bottom: map-get($spacers, block);
    }
  }

  &__right-bottom {
    @include create-row();
    flex-wrap: wrap;

    .ad-container {
      max-width: 728px;
    }
  }
}

type Query {
  websiteSection(input: WebsiteSectionQueryInput!): WebsiteSection
  websiteSectionAlias(input: WebsiteSectionAliasQueryInput!): WebsiteSection
}

type WebsiteSection {
  # fields from platform.model::Section
  id: Int! @value(localField: "_id")
  name: String
  description: String
  fullName: String

  # fields from website.model::Section
  site(input: ReferenceStatusInput = {}): WebsiteProductSite @refOne(model: "platform.Product", criteria: { type: "Site" })
  parent(input: ReferenceStatusInput = {}): WebsiteSection @refOne(model: "website.Section")
  # children(input: RelatedWebsiteSectionsInput = {}): WebsiteSectionConnection! @refMany(model: "website.Section", localField: "_id", foreignField: "parent.$id")
  # logo: PlatformAssetImage @refOne(model: "platform.Asset", criteria: { type: "Image" })

  # fields from trait.platform::StatusEnabled
  status: Int

  # fields from trait.platform::Sequenceable
  sequence: Int

  # fields from trait.platform::Content\SeoFields
  # metadata: WebsiteSectionMetadata! @sectionMetadata
  metadata: WebsiteSectionMetadata!
  alias: String
  redirects: [String]! @arrayValue
  slug: String
}

type WebsiteSectionMetadata {
  title: String
  description: String
}

input WebsiteSectionQueryInput {
  status: ReferenceStatus = active
  id: Int!
}

input WebsiteSectionAliasQueryInput {
  status: ReferenceStatus = active
  alias: String!
}

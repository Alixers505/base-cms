import gql from 'graphql-tag';
import { asArray } from '@base-cms/utils';
import { getAsObject } from '@base-cms/object-path';

$ const queryFragment = gql`
  fragment SubPageAWebsiteScheduleQueryFragment on Content {
    id
    type
    shortName
    teaser
    canonicalPath
    published
    company {
      id
      type
      name
      canonicalPath
    }
    primarySection {
      id
      name
      fullName
      canonicalPath
    }
    primaryImage {
      id
      src
      alt
    }
  }
`;

$ const pageNumber = input.pageNumber || 1;
$ const block = 'content-sub-page-a';
$ const query = {
  ...input.query,
  limit: 15,
  queryFragment,
};
$ const loadMore = {
  ...input.loadMore,
};

$ const section = getAsObject(input, 'section');
$ const channel = getAsObject(section, 'hierarchy.0');

<cms-query-website-scheduled-content|{ nodes, pageInfo }| ...query>
  <div class="load-more-page">
    <marko-web-gtm-track-inview-event event="page_load" vars={ page_number: pageNumber + 1 } />
    <content-flow-card-deck-a nodes=nodes.slice(0, 11) />
    <content-flow-card-list-a nodes=nodes.slice(11) />

    $ const { endCursor, hasNextPage } = pageInfo;
    $ delete query.skip;
    $ delete query.queryFragment;
    $ query.after = endCursor;
    $ const provide = { ...input, query };

    <cms-load-more-element
      show=hasNextPage
      page-number=pageNumber
      append-to=loadMore.appendTo
      max-pages=loadMore.maxPages
      block-name="content-block-sub-page-a"
      provide=provide
      button-class-obj={ btn: true, 'btn-lg': true, 'btn-primary': true }
      wrapping-class-obj={ 'text-center': true, 'pb-3': true }
    />
  </div>
</cms-query-website-scheduled-content>

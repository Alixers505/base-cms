import hierarchyAliases from "@base-cms/marko-web-gam/utils/hierarchy-aliases";
import queryFragment from "../../api/fragments/content-list";
import GAM from "../../../config/gam";

$ const { section } = data;

$ const aliases = hierarchyAliases(section);
$ const adSlots = {
  "gpt-ad-lb1":   GAM.getAdUnit({ name: "lb1", aliases }),
  "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases, size: [300, 250] }),
  "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases, size: [300, 600] }),
}

<marko-web-layout-website-section section=section>
  <@head>
    <marko-web-gtm-context|{ context }| for="website-section" obj=section>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-context>
    <marko-web-gam-slots slots=adSlots />
  </@head>
  <@above-container>
    <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "wa", aliases }) />
    <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "reskin", aliases }) />
  </@above-container>
  <@page>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionId: section.id, optionId: 9, limit: 5, queryFragment }
    >
      <website-content-hero-block nodes=nodes />
    </marko-web-query>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionId: section.id, limit: 7, skip: 5, queryFragment }
        >
          <website-content-list-block nodes=nodes>
            <@header>Featured</@header>
          </website-content-list-block>
        </marko-web-query>
      </div>
      <div class="col-lg-4 ad-rail">
        <marko-web-gam-display-ad id="gpt-ad-rail1" />
        <marko-web-gam-display-ad id="gpt-ad-rail2" />
      </div>
    </div>
  </@page>
  <@below-page>
    <marko-web-load-more
      component-name="content-load-more-block"
      component-input={ aliases }
      fragment-name="content-list"
      query-name="website-scheduled-content"
      query-params={ sectionId: section.id, limit: 14, skip: 12 }
      page-input={ for: "website-section", id: section.id }
      trigger-input={ buttonClass: "btn btn-lg btn-primary" }
    />
  </@below-page>
  <@foot>
    <marko-web-gam-fixed-ad-bottom ...GAM.getAdUnit({ name: "lb2", aliases }) refresh-interval=0 />
  </@foot>
</marko-web-layout-website-section>

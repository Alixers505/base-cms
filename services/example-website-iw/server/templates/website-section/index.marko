import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../../graphql/fragments/content-list";
import GAM from "../../../config/gam";

$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
          "gpt-ad-lb1":   GAM.getAdUnit({ name: "lb1", aliases }),
          "gpt-ad-lb2":   GAM.getAdUnit({ name: "lb1", aliases, options: { size: [728, 90] } }),
          "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases, size: [300, 250] }),
          "gpt-ad-rail2": GAM.getAdUnit({ name: "rail1", aliases, size: [300, 250] }),
          "gpt-ad-rail3": GAM.getAdUnit({ name: "rail2", aliases, size: [300, 600] }),
        }
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <!-- <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "wa", aliases }) />
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "reskin", aliases }) /> -->
    </marko-web-resolve-page>
  </@above-container>
  <@page>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

    <marko-web-resolve-page|{ data: section, resolved }| node=pageNode>
      <marko-web-page-wrapper modifiers=["website-section-header"]>
        <@section>
          <default-theme-website-section-breadcrumbs display-self=false section=section />
          <marko-web-website-section-name class="page-wrapper__title" tag="h1" obj=section />
          <marko-web-website-section-description class="page-wrapper__deck" obj=section />
        </@section>
      </marko-web-page-wrapper>

      $ const children = resolved.getEdgeNodesFor("children");
      <if(section.isRoot && children.length)>
        <marko-web-page-wrapper modifiers=["child-website-section-nav"]>
          <@section>
            <for|child| of=children>
              <marko-web-website-section-name obj=child link=true class="child-website-section-nav-item" />
            </for>
          </@section>
        </marko-web-page-wrapper>
      </if>

      <marko-web-page-wrapper modifiers=["website-section-contents"]>
        <@section>
          <div class="page-layout">

            <div class="page-layout__left-rail">
              <div style="background-color: green; height: 20px; width: 100%"></div>
            </div>

            <div class="page-layout__main">

              <div class="page-layout__main-top">
                <div class="page-layout__center">
                  <div style="background-color: blue; height: 20px; width: 100%"></div>
                </div>
                <div class="page-layout__right-rail">
                  <div style="background-color: red; height: 20px; width: 100%"></div>
                </div>
              </div>

              <div class="page-layout__main-bottom">
                <div class="col-12">
                  <div style="background-color: yellow; height: 20px; width: 100%"></div>
                </div>
              </div>
            </div>
          </div>


          <!-- <div class="row">
            <div class="fixed-col fixed-col--3 fixed-col--rail">

            </div>
            <div class="col">
              <div class="row">
                <div style="flex: 0 0 63.6363%; max-width: 63.6363%; position: relative; padding-right: 10px; padding-left: 10px;">
                  <div style="background-color: green; height: 20px; width: 100%"></div>
                </div>
                <div class="fixed-col fixed-col--3">
                  <div style="background-color: red; height: 20px; width: 100%"></div>
                </div>
              </div>
              <div style="background-color: blue; height: 20px; width: 100%"></div>
            </div>
          </div> -->

          <!-- <div class="row">

            <aside class="fixed-col fixed-col--3 fixed-col--rail">
              <marko-web-query|{ nodes }| name="all-published-content" params={ limit: 2, excludeContentTypes: ["Contact"], queryFragment }>
                <website-content-list-flow
                  nodes=nodes
                  display-image=false
                  inner-justified=false
                  flush-x=true
                  flush-y=true
                >
                  <@header>Recent</@header>
                </website-content-list-flow>
              </marko-web-query>

              <marko-web-gam-display-ad modifiers=["left"] id="gpt-ad-rail1" />

              <marko-web-query|{ nodes }| name="all-published-content" params={ limit: 3, skip: 2, excludeContentTypes: ["Contact"], queryFragment }>
                <website-content-list-flow
                  nodes=nodes
                  display-image=false
                  inner-justified=false
                  flush-x=true
                  flush-y=true
                />
              </marko-web-query>

              <marko-web-query|{ nodes }|
                name="website-optioned-content"
                params={ sectionAlias: "home", optionName: "Pinned", limit: 4, queryFragment }
              >
                <website-content-list-flow
                  nodes=nodes
                  display-image=false
                  inner-justified=false
                  flush-x=true
                  flush-y=true
                >
                  <@header>Featured</@header>
                </website-content-list-flow>
              </marko-web-query>
            </aside>

            <div class="fixed-col fixed-col--9">

              <div class="row">
                <div class="fixed-col fixed-col--6">
                  <marko-web-query|{ nodes }|
                    name="website-optioned-content"
                    params={ sectionId: id, optionName: "Pinned", limit: 5, requiresImage: true, queryFragment }
                  >
                    <website-content-hero-flow nodes=nodes>
                      <@header>Highlights</@header>
                    </website-content-hero-flow>
                  </marko-web-query>
                </div>

                <aside class="fixed-col fixed-col--3 fixed-col--rail fixed-col--website-section-right">
                  <marko-web-gam-display-ad modifiers=["right"] id="gpt-ad-rail2" />
                  <marko-web-gam-display-ad modifiers=["right"] id="gpt-ad-rail3" />
                </aside>
              </div>

              <div class="row">
                <marko-web-query|{ nodes }|
                  name="website-scheduled-content"
                  params={ sectionId: id, limit: 10, skip: 5, queryFragment }
                >
                  <if(nodes.length)>
                    $ const cardNodes = nodes.slice(0, 4);
                    $ const listNodes = nodes.slice(4);
                    <if(cardNodes.length)>
                      <for|node| of=cardNodes>
                        <div class="col-6 mb-block">
                          <website-content-card-node node=node use-placeholder=true image-width=240 />
                        </div>
                      </for>
                    </if>

                    <div class="col">
                      <marko-web-gam-display-ad id="gpt-ad-lb2" class="mb-block" />
                    </div>

                    <if(listNodes.length)>
                      <div class="col">
                        <website-content-list-flow
                          nodes=listNodes
                          flush-x=true
                          flush-y=true
                          with-teaser=true
                          inner-justified=false
                          image-width=180
                        />
                      </div>
                    </if>
                  </if>
                </marko-web-query>
              </div>

            </div>
          </div> -->
        </@section>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
  <!-- <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 14, skip: 15 }
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page> -->
  <!-- <@foot>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-gam-fixed-ad-bottom ...GAM.getAdUnit({ name: "lb2", aliases }) refresh-interval=0 />
    </marko-web-resolve-page>
  </@foot> -->
</marko-web-website-section-page-layout>
